on:
  workflow_dispatch:
  schedule:
    - cron: "8 * * * *"  # Run every hour at minute 8

jobs:
  update-catalog:
    runs-on: ubuntu-latest
    env:
      GIT_HTTP_TIMEOUT: 600
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history and all branches

      - name: Remove existing catalog, Thumbnails and DB (if needed)
        run: |
          rm -rf catalog Thumbnails cards_database.sqlite

      - name: Run sync script
        env:
          LORCANA_SECRET_TOKEN: ${{ secrets.LORCANA_SECRET_TOKEN }}
        run: python3 sync.py

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git config --global http.postBuffer 1073741824  # 1 GB
          git config --global core.compression 9
          git config --global http.version HTTP/1.1

      - name: Commit changes in main branch
        run: |
          git reset --hard
          git pull --rebase
          git add catalog cards_database.sqlite Thumbnails
          git commit -m "Update catalog, database and Thumbnails" || echo "No changes to commit"
          git push

      - name: Switch to glimmer.scan-compatible branch and update it
        run: |
          git checkout glimmer.scan-compatible
          git reset --hard main
          git push origin glimmer.scan-compatible --force

      - name: Create release artifacts
        id: create_artifacts
        run: |
          RELEASE_VERSION=$(date +'%Y%m%d-%H%M%S')
          echo "Release version: $RELEASE_VERSION"
          echo "::set-output name=version::$RELEASE_VERSION"
          
          # Create zip for the catalog folder
          zip -r Catalog_${RELEASE_VERSION}.zip catalog
          
          # Create zip for the Thumbnails folder (English images)
          zip -r Thumbnails_${RELEASE_VERSION}.zip Thumbnails
          
          # Create zip for the new database
          zip -r Database_${RELEASE_VERSION}.zip cards_database.sqlite

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_artifacts.outputs.version }}
          release_name: "Release ${{ steps.create_artifacts.outputs.version }} (glimmer.scan-compatible)"
          body: |
            **Release Summary:**
            This release includes:
            - **Catalog:** Latest catalog data for all languages.
            - **Thumbnails:** English card images (height 512) downloaded into the Thumbnails folder.
            - **Database:** The updated SQLite database (cards_database.sqlite) with new price data and additional fields.
            
            This release was automatically generated on the main branch and pushed to the glimmer.scan-compatible branch.
          draft: false
          prerelease: false

      - name: Upload Release Asset - Catalog
        run: |
          RELEASE_VERSION=${{ steps.create_artifacts.outputs.version }}
          echo "Uploading Catalog_${RELEASE_VERSION}.zip"
          gh release upload $RELEASE_VERSION Catalog_${RELEASE_VERSION}.zip --repo beingwortmann/lorcana-api
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset - Thumbnails
        run: |
          RELEASE_VERSION=${{ steps.create_artifacts.outputs.version }}
          echo "Uploading Thumbnails_${RELEASE_VERSION}.zip"
          gh release upload $RELEASE_VERSION Thumbnails_${RELEASE_VERSION}.zip --repo beingwortmann/lorcana-api
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset - Database
        run: |
          RELEASE_VERSION=${{ steps.create_artifacts.outputs.version }}
          echo "Uploading Database_${RELEASE_VERSION}.zip"
          gh release upload $RELEASE_VERSION Database_${RELEASE_VERSION}.zip --repo beingwortmann/lorcana-api
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
